@using Microsoft.AspNetCore.Components
@using Strem.Portals.Components.App.Models
@using Strem.Portals.Data

@inherits ValidatedComponent<Strem.Portals.Components.App.Models.PortalCreatorFormData>

<h3 class="title is-3 has-text-black">Create Portal</h3>
<EditForm EditContext="EditContext" class="block">
    <div class="field">
        <label class="label">Name</label>
        <div class="control">
            <TextInput Placeholder="i.e Broadcaster Portal" @bind-Value="Data.Name"/>
        </div>
    </div>
    @if (!IsValid)
    {
        <ValidationMessageContainer Messages="EditContext.GetValidationMessages()"/>
    }
    <div class="field is-grouped">
        <div class="control">
            <button class="button is-success" @onclick="Create" disabled="@(!IsValid)">Create</button>
        </div>
        <div class="control">
            <button class="button is-link is-light" @onclick="Cancel">Cancel</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter] 
    public EventCallback<PortalData> OnPortalCreated { get; set; }
    [Parameter] 
    public EventCallback OnCancelled { get; set; }

    protected override Task OnInitializedAsync()
    {
        Data = new PortalCreatorFormData();
        return base.OnInitializedAsync();
    }

    public void Create()
    {
        var newPortal = new PortalData(Guid.NewGuid(), Data.Name);
        Data.Name = string.Empty;
        OnPortalCreated.InvokeAsync(newPortal);
    }

    public void Cancel()
    {
        Data.Name = string.Empty;
        OnCancelled.InvokeAsync();
    }
}